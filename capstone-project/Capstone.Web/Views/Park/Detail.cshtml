@using Capstone.Web.Models;
@model Park



@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container">
    <h2 class="text-center text-muted"> @Model.ParkName, @Model.State </h2>
    <img src="@Url.Content("~/Content/img/parks/" + Model.ParkCode + ".jpg")" alt="@Model.ParkName" class="detailImg img-fluid" />
    <br />
    <p class="blockquote-reverse"> <i> <b> @Model.InspirationalQuote - @Model.InspirationalQuoteSource  </b></i></p>



    <p>Year Established:  @Model.YearFounded  </p>
    <p>Acreage: @Model.Acreage </p>
    <p> Elevation: @Model.ElevationInFeet feet</p>
    <p> Trail: @Model.MilesOfTrail miles</p>
    <p>Number of Campsites: @Model.NumberOfCampsites</p>
    <p> Climate: @Model.Climate</p>
    <p>Number of Annual Visitors: @Model.AnnualVisitorCount</p>
    @if (Model.EntryFee == 0)
    {
        <p>Entry Fee: Free</p>
    }
    @if (Model.EntryFee != 0)
    {
        <p>Entry Fee: $@Model.EntryFee </p>
    }
    <p>Number of Animal Species: @Model.NumberOfAnimalSpecies</p>
    <p>@Model.ParkDescription</p>

</div>



<div class=" form-group">

    @using (Html.BeginForm("Detail", "Park", FormMethod.Post))
    {
       
            @Html.Label("F", new { @class = "btn btn-primary" })
            @Html.RadioButtonFor(m => m.TempScale, "F", new { @class = "btn-circle" })
        <br />
            @Html.Label("C", new {@class = "btn btn-primary" })
            @Html.RadioButtonFor(m => m.TempScale, "C", new { @class = "btn-circle" })
            @Html.HiddenFor(m => m.ParkCode)

            <button class="btn btn-outline-info" type="submit"> Click Me!</button>
        
    }
</div>



<div class="row" style="background-color: white">
    <div>
        <h3>Today</h3>

        @for (int i = 0; i < Model.fiveDaysWeather.Count; i++)
            {
            <div class="col-xs-2">

                <img src="@Url.Content("~/Content/img/weather/" + Model.fiveDaysWeather[i].Forecast + ".png")" alt="Model.fiveDaysWeather[i].Forecast" class="weatherImg" />
                <p> <i>@Model.fiveDaysWeather[i].Forecast.ToUpper() </i></p>

                @if (Model.TempScale == "C")
                {
                    <p> <b> High: </b> @Model.ChangeToCelsius(Model.fiveDaysWeather[i].High)°C  </p>
                        <p>  <b> Low: </b> @Model.ChangeToCelsius(Model.fiveDaysWeather[i].Low)°C</p>

                }
                else
                {
                    <p> <b> High: </b> @Model.fiveDaysWeather[i].High°F  </p>
                        <p> <b>Low: </b>@Model.fiveDaysWeather[i].Low°F </p>
                }

                @if (Model.fiveDaysWeather[i] == Model.fiveDaysWeather[0])
                {
                    @Model.RecommendationForecast(Model.fiveDaysWeather[0].Forecast)
                    @Model.RecommendationTemp(Model.fiveDaysWeather[0].High, Model.fiveDaysWeather[0].Low)
                }

            </div>

        }
    </div>
</div>
</div>