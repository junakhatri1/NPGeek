@using Capstone.Web.Models;
@model Survey 
@{
    ViewBag.Title = "Survey";
    Layout = "~/Views/Shared/Layout.cshtml";
}
    <h2>National Park Survey</h2>

<section>

        @using (Html.BeginForm("FavoriteParks", "Survey", FormMethod.Post))
        {
            <div class="form-group">

                @Html.LabelFor(m => m.ParkCode)
                <div class="form-width">
                    
                        @Html.DropDownListFor(m => m.ParkCode, Survey.AllParkNames, new { @class = "form-control" })
                    </div>
               
                         @Html.ValidationMessageFor(m => m.ParkCode)
           
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.EmailAddress)
                    <div class="form-width">
                        @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.EmailAddress, String.Empty)
                    </div>


                <div class="form-group">
                    @Html.LabelFor(m => m.State)
                    <div class="form-width">
                        @Html.DropDownListFor(m => m.State, Survey.States, new { @class = "form-control" })
                        </div>
                    </div>

                @*<div class="form-inline ">
                    
                        @Html.Label("Inactive")
                    <div class="checkbox">
                        @Html.CheckBox("Inactive", false, new { @class = " form-control" })
                        </div>
                        @Html.Label("Sedentary")
                    <div class="checkbox">
                        @Html.CheckBox("Sedentary", false, new { @class = "form-control" })
                        </div>
                        @Html.Label("Active")
                        <div class="checkbox">
                            @Html.CheckBox("Active", false, new { @class = "form-control" })
                            </div>
                            @Html.Label("Extremely Active")
                            <div class="checkbox">
                                @Html.CheckBox("Extremely Active", false, new { @class = "form-control" })

                            </div>*@
                   
            
                      <div class="radio">
                        @Html.Label("Inactive", new { @class = "form-check-label" })
                        @Html.RadioButtonFor(m => m.ActivityLevel, "Inactive", new { @class = "radio-inline" })
                        @Html.ValidationMessageFor(m => m.ActivityLevel, String.Empty)

                        @Html.Label("Sedentary")
                        @Html.RadioButtonFor(m => m.ActivityLevel, "Sedentary", new { @class = "radio-inline" })
                        @Html.ValidationMessageFor(m => m.ActivityLevel, String.Empty)

                        @Html.Label("Active", new { @class = "form-check-label" })
                        @Html.RadioButtonFor(m => m.ActivityLevel, "Active", new { @class = "radio-inline" })
                        @Html.ValidationMessageFor(m => m.ActivityLevel, String.Empty)

                        @Html.Label("Extremely Active")
                        @Html.RadioButtonFor(m => m.ActivityLevel, "Extremely Active", new { @class = "radio-inline" })
                        @Html.ValidationMessageFor(m => m.ActivityLevel, String.Empty)
                    </div>
                    
                    
                <button type="submit" class="btn btn-primary">Submit</button>

        }
</section>

